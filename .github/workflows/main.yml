name: ILS-telegram-bot workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |         
        python -m pip install --upgrade pip         
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort        
        pip install -r requirements.txt 

    - name: Test with flake8 and django tests
      run:
        python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: andrey8606/ils-telegram-bot:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |            
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker rmi andrey8606/ils-telegram-bot:latest 
            sudo docker pull andrey8606/ils-telegram-bot:latest                        
            touch .env
            echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} > .env
            echo TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }} >> .env
            echo API_TOKEN=${{ secrets.API_TOKEN }} >> .env
            echo TYPE=${{ secrets.TYPE }} >> .env
            echo PROJECT_ID=${{ secrets.PROJECT_ID }} >> .env
            echo PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }} >> .env
            echo CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }} >> .env
            echo CLIENT_ID=${{ secrets.CLIENT_ID }} >> .env
            echo AUTH_URI=${{ secrets.AUTH_URI }} >> .env
            echo TOKEN_URI=${{ secrets.TOKEN_URI }} >> .env
            echo AUTH_PROVIDER=${{ secrets.AUTH_PROVIDER }} >> .env
            echo CLIENT_CERT=${{ secrets.CLIENT_CERT }} >> .env
            echo PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} >> .env            
            sudo docker run --rm -d andrey8606/ils-telegram-bot:latest
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
